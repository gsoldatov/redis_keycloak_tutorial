+ KeyCloak container:
    + pass params from configuration;
    + setup programmatically:
        ++ add & delete app realm;
        ++ add & delete client;
        ++ add & delete roles;
        ++ add & delete users;
    + ensure realm & user configuration persists container being stopped;
    x add healthcheck to docker run command to check if container is up;
    + expose healthcheck port;

+ CLI utility for containers:
    + run:
        + runs Keycloak container;
        + performs initial configuration of keycloak;
    + stop:
        + stops Keycloak container;
    + remove:
        + removes Keycloak container;

- web app:
    - auth routes:
        + login:
            + gets a new token from Keycloak & returns it;
            + handles network errors;
            + handles incorrect credentials;
        - logout;
    - app routes:
        - protected (first role);
        - protected (second role);

+ tests:
    + fixtures:
        + config;
        + KC container;
        + wait for Keycloak to be ready;
        + test config (custom KC realm);
        + test KC realm & data (drop in teardown);
        + async test client (app without cache);
        + async test client (app without cache & with "disabled" keycloak); # or override dependency KC service dependency
    
    + tests:
        + login:
            + validation;
            + network error;
            + disabled user;
            + invalid credentials;
            + successful login;
        + logout:
            + network error;
            + missing token;
            + invalid token:
                + wrong format;
                x add a role, which does not exist;
            + expired token;
            x token of a disabled user;
            + successful logout;

? limit scope to app_client when logging in;

- Redis cache:
    - add tokens on login;
    - invalidate tokens on logout or expiry;
    - refresh tokens on valid route calls;

- CLI utility for contains:
    - add Redis container management;

- tests:
    - mocks:
        - test config;
        - test containers:
            ? use dev containers with temp databases & realms;
        - app & client;
    
    - tests:
        ???
